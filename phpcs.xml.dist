<?xml version="1.0"?>
<ruleset>
    <arg name="basepath" value="." />
    <arg name="extensions" value="php" />
    <arg name="parallel" value="80" />
    <arg name="cache" value=".phpcs-cache" />
    <arg name="colors" />

    <!-- Ignore warnings (n), show progress of the run (p), and show sniff names (s) -->
    <arg value="nps"/>

    <file>src</file>
    <file>tests</file>

    <!-- Target minimum supported PHP version -->
    <config name="php_version" value="80400"/>

    <!-- ****************************************** -->
    <!-- Import rules from doctrine/coding-standard -->
    <!-- ****************************************** -->
    <rule ref="Doctrine">
        <!-- ********************************** -->
        <!-- Exclude naming sniffs for suffixes -->
        <!-- ********************************** -->
        <exclude name="SlevomatCodingStandard.Classes.SuperfluousAbstractClassNaming" />
        <exclude name="SlevomatCodingStandard.Classes.SuperfluousExceptionNaming" />
        <exclude name="SlevomatCodingStandard.Classes.SuperfluousInterfaceNaming" />
        <exclude name="SlevomatCodingStandard.Classes.SuperfluousTraitNaming" />


        <!-- **************************************** -->
        <!-- Exclude sniffs that force unwanted style -->
        <!-- **************************************** -->
        <exclude name="Generic.Formatting.MultipleStatementAlignment" />
        <exclude name="Squiz.Commenting.FunctionComment.ThrowsNoFullStop" />
        <exclude name="SlevomatCodingStandard.TypeHints.UnionTypeHintFormat.DisallowedShortNullable" />
        <exclude name="SlevomatCodingStandard.ControlStructures.EarlyExit" />
    </rule>


    <!-- **************************************** -->
    <!-- Enable rules not enforced by Doctrine CS -->
    <!-- **************************************** -->

    <!-- Require arrow functions where possible -->
    <rule ref="SlevomatCodingStandard.Functions.RequireArrowFunction"/>

    <!-- Forbid fully qualified names even for colliding names -->
    <rule ref="SlevomatCodingStandard.Namespaces.ReferenceUsedNamesOnly">
        <properties>
            <property name="allowFallbackGlobalConstants" value="false"/>
            <property name="allowFallbackGlobalFunctions" value="false"/>
            <property name="allowFullyQualifiedGlobalClasses" value="false"/>
            <property name="allowFullyQualifiedGlobalConstants" value="false"/>
            <property name="allowFullyQualifiedGlobalFunctions" value="false"/>
            <property phpcs-only="true" name="allowFullyQualifiedNameForCollidingClasses" value="false"/>
            <property phpcs-only="true" name="allowFullyQualifiedNameForCollidingConstants" value="false"/>
            <property phpcs-only="true" name="allowFullyQualifiedNameForCollidingFunctions" value="false"/>
            <property name="searchAnnotations" value="true"/>
        </properties>
    </rule>


    <!-- ****************************************************** -->
    <!-- Don't require annotations to specify traversable types -->
    <!-- ****************************************************** -->
    <rule ref="SlevomatCodingStandard.TypeHints.ParameterTypeHint">
        <exclude name="SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingTraversableTypeHintSpecification" />
    </rule>
    <rule ref="SlevomatCodingStandard.TypeHints.PropertyTypeHint">
        <exclude name="SlevomatCodingStandard.TypeHints.PropertyTypeHint.MissingTraversableTypeHintSpecification" />
    </rule>
    <rule ref="SlevomatCodingStandard.TypeHints.ReturnTypeHint">
        <exclude name="SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingTraversableTypeHintSpecification" />
    </rule>
</ruleset>
